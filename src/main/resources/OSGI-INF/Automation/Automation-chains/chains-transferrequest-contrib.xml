<?xml version="1.0" encoding="UTF-8"?>

<component name="org.athento.nuxeo.athento-nx-administrative-doctypes.chains-transferrequest"
    version="1.0.0">
    <require>org.nuxeo.runtime.started</require>

    <extension target="org.nuxeo.ecm.core.operation.OperationServiceComponent"
        point="chains">

        <chain id="TransferRequest-assignID">
            <documentation>
                Sequential ID.
                2 digits - Month
                2 digits - Year
                6 numbers - Sequential ID
                Each sequential number starts every month for every company. Example:
                TR-MMYY-xxxxxx
                0117/000001
            </documentation>
            <operation id="Context.FetchDocument" />
            <!-- Year. Used for uniqueness of number id AND the composition of the
               id -->
            <operation id="Context.SetVar">
                <param type="string" name="name">year_var</param>
                <param type="object" name="value">expr:new
                    java.text.SimpleDateFormat("yy").format(Document["dc:created"].getTime())
                </param>
            </operation>
            <!-- Month. Used for uniqueness of number id AND the composition of the
                id -->
            <operation id="Context.SetVar">
                <param type="string" name="name">month_var</param>
                <param type="object" name="value">expr:new
                    java.text.SimpleDateFormat("MM").format(Document["dc:created"].getTime())
                </param>
            </operation>
            <!-- Number, which is formatted with 6 digits -->
            <operation id="Context.SetVar">
                <param type="string" name="name">uniquetrnumber_var</param>
                <param type="object" name="value">expr:Fn.getNextId("unique-tr-key"+year_var+month_var)
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">uniquetrnumberformatted_var</param>
                <param type="object" name="value">expr:uniquetrnumber_var.format("%06d",Integer.valueOf(uniquetrnumber_var))
                </param>
            </operation>
            <!-- Final variable id_var with the ID composition. Stored in both title -->
            <operation id="Context.SetVar">
                <param type="string" name="name">id_var</param>
                <param type="object" name="value">expr:@{"TR-"+year_var+month_var+"-"+uniquetrnumberformatted_var+"- Pendiente Aprobacion"}
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">dc:title</param>
                <param type="boolean" name="save">true</param>
                <param type="serializable" name="value">expr:id_var
                </param>
            </operation>
            <operation id="Document.CheckIn">
                <param type="string" name="version">0.0</param>
            </operation>

        </chain>

        <chain id="TransferRequest-assignID-approved">
            <documentation>
                Sequential ID.
                2 digits - Month
                2 digits - Year
                6 numbers - Sequential ID
                Each sequential number starts every month for every company. Example:
                TR-MMYY-xxxxxx
                0117/000001
            </documentation>
            <operation id="Context.FetchDocument" />
            <!-- Year. Used for uniqueness of number id AND the composition of the
               id -->
            <operation id="Context.SetVar">
                <param type="string" name="name">year_var</param>
                <param type="object" name="value">expr:new
                    java.text.SimpleDateFormat("yy").format(Document["dc:created"].getTime())
                </param>
            </operation>
            <!-- Month. Used for uniqueness of number id AND the composition of the
                id -->
            <operation id="Context.SetVar">
                <param type="string" name="name">month_var</param>
                <param type="object" name="value">expr:new
                    java.text.SimpleDateFormat("MM").format(Document["dc:created"].getTime())
                </param>
            </operation>
            <!-- Number, which is formatted with 6 digits -->
            <operation id="Context.SetVar">
                <param type="string" name="name">uniquetrnumber_var</param>
                <param type="object" name="value">expr:Fn.getNextId("unique-tr-key-aprobado"+year_var+month_var)
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">uniquetrnumberformatted_var</param>
                <param type="object" name="value">expr:uniquetrnumber_var.format("%06d",Integer.valueOf(uniquetrnumber_var))
                </param>
            </operation>
            <!-- Final variable id_var with the ID composition. Stored in both title -->
            <operation id="Context.SetVar">
                <param type="string" name="name">id_var</param>
                <param type="object" name="value">expr:@{"TR-"+year_var+month_var+"-"+uniquetrnumberformatted_var}
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">dc:title</param>
                <param type="boolean" name="save">true</param>
                <param type="serializable" name="value">expr:id_var
                </param>
            </operation>
            <operation id="Document.CheckIn">
                <param type="string" name="version">0.0</param>
            </operation>

        </chain>

        <chain id="transferRequest-userInfo">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">office</param>
                <param type="object" name="value">expr:Document["userFile:office"]
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">userFile:account</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:office == empty ? empty : office
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:needslocalapproval</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:true
                </param>
            </operation>
        </chain>

        <chain id="TR-NeedsSectorApproval">
            <documentation>
                Needs sector (from the activity manager)
            </documentation>
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">containsVO_var</param>
                <param type="boolean" name="value">expr:false
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">containsnotVO_var</param>
                <param type="boolean" name="value">expr:false
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">transferrequestdataList</param>
                <param type="object" name="value">expr:Document["transferrequest:transferrequestdata"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">len</param>
                <param type="object" name="value">expr:transferrequestdataList.size()</param>
            </operation>
            <operation id="Context.RunOperationOnList">
                <param type="string" name="id">expr:len == 0 ? "voidchain" :
                    "TR-NeedsSectorApprovalCheck"
                </param>
                <param type="string" name="list">transferrequestdataList</param>
                <param type="boolean" name="isolate">false</param>
                <param type="string" name="item">item</param>
                <param type="boolean" name="newTx">false</param>
                <param type="boolean" name="rollbackGlobalOnError">true</param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:containsVO</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:containsVO_var
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:containsnotVO</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:containsnotVO_var
                </param>
            </operation>
        </chain>

        <chain id="TR-NeedsSectorApprovalCheck">
            <documentation>
                Needs sector (from the activity manager)
                Checks individually
            </documentation>
            <operation id="Context.SetVar">
                <param type="string" name="name">sector_var</param>
                <param type="object" name="value">expr:item.get("sector")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">containsVO_var</param>
                <param type="object" name="value">expr:containsVO_var == true ? true :
                    sector_var == '01' ? true :
                    false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">containsnotVO_var</param>
                <param type="object" name="value">expr:containsnotVO_var == true ? true :
                    sector_var != '01' ? true :
                    false</param>
            </operation>
        </chain>

        <chain id="TR-sumTotalInputOutput">
            <documentation>
                Sums each amount specified inside amount field in TR data, depending on field.
            </documentation>
            <operation id="Context.FetchDocument" />

            <!--Represents the list of entries of tr data -->
            <operation id="Context.SetVar">
                <param type="string" name="name">transferRequestDataList</param>
                <param type="object" name="value">expr:Document["transferrequest:transferrequestdata"]</param>
            </operation>

            <!-- Variable which holds the sum of all the amounts specified in transferrequest:input -->
            <operation id="Context.SetVar">
                <param type="string" name="name">totalSumTR</param>
                <param type="integer" name="value">0</param>
            </operation>

            <!-- Executes an operation to sum each entry of transferRequestDataList -->
            <operation id="Context.RunOperationOnList">
                <param type="string" name="id">Athento.tr.itemSumTR</param>
                <param type="string" name="list">transferRequestDataList</param>
                <param type="boolean" name="isolate">false</param>
                <param type="string" name="item">item</param>
                <param type="boolean" name="newTx">false</param>
                <param type="boolean" name="rollbackGlobalOnError">true</param>
            </operation>

            <!--Saves totalSumTRInput property -->
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">transferrequest:amount</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:totalSumTR</param>
            </operation>

        </chain>

        <!-- Chain executed for each entry, extracts the amount of the item and sums it.-->
        <chain id="Athento.tr.itemSumTR">
            <operation id="Context.FetchDocument"/>
            <operation id="Context.SetVar">
                <param type="string" name="name">itemValue</param>
                <param type="object" name="value">expr:item.get("amount")</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">totalSumTR</param>
                <param type="object" name="value">expr:totalSumTR +item.get("amount")</param>
            </operation>
        </chain>

        <chain id="Template-Solicitud-Transferencia-before-save">
            <operation id="Context.FetchDocument"/>
            <operation id="Context.SetInputAsVar">
                <param type="string" name="name">documents</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">clase</param>
                <param type="object" name="value">expr:@{documents.getClass()}</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">essimple</param>
                <param type="boolean" name="value">expr:clase == 'class org.nuxeo.ecm.core.api.impl.DocumentModelImpl'</param>
            </operation>
            <operation id="Document.Fetch">
                <param type="document" name="value">expr:essimple ? documents : documents[0]</param>
            </operation>
            <operation id="TemplateProcessor.Render">
                <param type="string" name="templateName">Plantilla Solicitud de Transferencia</param>
            </operation>
            <operation id="Blob.AttachOnDocument">
                <param type="document" name="document">expr:essimple ? documents : documents[0]</param>
                <param type="boolean" name="save">false</param>
                <param type="string" name="xpath">file:content</param>
            </operation>
        </chain>

    </extension>

</component>