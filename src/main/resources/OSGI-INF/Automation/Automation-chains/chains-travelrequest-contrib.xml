<?xml version="1.0" encoding="UTF-8"?>

<component name="org.athento.nuxeo.athento-nx-administrative-doctypes.chains-travelrequest"
           version="1.0.0">
    <require>org.nuxeo.runtime.started</require>

    <extension target="org.nuxeo.ecm.core.operation.OperationServiceComponent"
               point="chains">

        <chain id="travelRequest-assignID">
            <documentation>
                Assign ID with the following rules: OMAAAA/MM/XXXXXX Checks
                in the Document for versioning
            </documentation>
            <operation id="Context.FetchDocument" />
            <!-- Year. Used for uniqueness of number id AND the composition of the
                id -->
            <operation id="Context.SetVar">
                <param type="string" name="name">year_var</param>
                <param type="object" name="value">expr:new
                    java.text.SimpleDateFormat("yy").format(Document["dc:created"].getTime())
                </param>
            </operation>
            <!-- Month. Used for uniqueness of number id AND the composition of the
                id -->
            <operation id="Context.SetVar">
                <param type="string" name="name">month_var</param>
                <param type="object" name="value">expr:new
                    java.text.SimpleDateFormat("MM").format(Document["dc:created"].getTime())
                </param>
            </operation>
            <!-- Number, which is formatted with 6 digits -->
            <operation id="Context.SetVar">
                <param type="string" name="name">uniquetrnumber_var</param>
                <param type="object" name="value">expr:Fn.getNextId("unique-tr-key"+year_var+month_var)
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">uniquetrnumberformatted_var</param>
                <param type="object" name="value">expr:uniquetrnumber_var.format("%06d",Integer.valueOf(uniquetrnumber_var))
                </param>
            </operation>
            <!-- Final variable id_var with the ID composition. Stored in both title
                and projectid -->
            <operation id="Context.SetVar">
                <param type="string" name="name">id_var</param>
                <param type="object" name="value">expr:@{"OM-"+year_var+month_var+"-"+uniquetrnumberformatted_var}
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">dc:title</param>
                <param type="boolean" name="save">true</param>
                <param type="serializable" name="value">expr:id_var
                </param>
            </operation>
            <operation id="Document.CheckIn">
                <param type="string" name="version">0.0</param>
            </operation>

        </chain>

        <chain id="travelRequest-assignID-approved">
            <documentation>
                Assign approved ID with the following rules: OM-CC-AAMM/XXXXXX Checks
                in the Approved Document for versioning
            </documentation>
            <operation id="Context.FetchDocument" />
            <!-- Year. Used for uniqueness of number id AND the composition of the
                id -->
            <operation id="Context.SetVar">
                <param type="string" name="name">year_var</param>
                <param type="object" name="value">expr:new
                    java.text.SimpleDateFormat("yy").format(Document["dc:created"].getTime())
                </param>
            </operation>
            <!-- Month. Used for uniqueness of number id AND the composition of the
                id -->
            <operation id="Context.SetVar">
                <param type="string" name="name">month_var</param>
                <param type="object" name="value">expr:new
                    java.text.SimpleDateFormat("MM").format(Document["dc:created"].getTime())
                </param>
            </operation>
            <!-- Office. Used for the composition of the id -->
            <operation id="Context.SetVar">
                <param type="string" name="name">office_var</param>
                <param type="object" name="value">expr:Document["administrative:travel_company"] == empty ?
                "0" : Document["administrative:travel_company"]</param>
            </operation>
            <!-- Number, which is formatted with 6 digits -->
            <operation id="Context.SetVar">
                <param type="string" name="name">uniquetrnumber_var</param>
                <param type="object" name="value">expr:Fn.getNextId("unique-tr-approved-key"+year_var+month_var)
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">uniquetrnumberformatted_var</param>
                <param type="object" name="value">expr:uniquetrnumber_var.format("%06d",Integer.valueOf(uniquetrnumber_var))
                </param>
            </operation>
            <!-- Final variable id_var with the ID composition. Stored in both title
                and projectid -->
            <operation id="Context.SetVar">
                <param type="string" name="name">id_var</param>
                <param type="object" name="value">expr:@{"OM-"+office_var+"-"+year_var+month_var+"-"+uniquetrnumberformatted_var}
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">dc:title</param>
                <param type="boolean" name="save">true</param>
                <param type="serializable" name="value">expr:id_var
                </param>
            </operation>
            <operation id="Document.CheckIn">
                <param type="string" name="version">0.0</param>
            </operation>

        </chain>

        <chain id="calculateTravelRequestCompany">
            <documentation>
                Company to invoice depending on the center attached.
            </documentation>
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">company_var</param>
                <param type="object" name="value">expr:Document["administrative:travel_office"].charAt(0) == '0' ? '01 Renault Retail Group Madrid' :
                                                Document["administrative:travel_office"].charAt(0) == '1' ? '01 Renault Retail Group Madrid' :
                                                Document["administrative:travel_office"].charAt(0) == '2' ? '01 Renault Retail Group Madrid' :
                                                Document["administrative:travel_office"].charAt(0) == '5' ? '50 Renault Retail Group Barcelona' :
                                                '70 Renault Retail Group Levante'
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:travel_companyNumber</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:company_var
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">company_var</param>
                <param type="object" name="value">expr:Document["administrative:travel_office"].charAt(0) == '0' ? '01' :
                    Document["administrative:travel_office"].charAt(0) == '1' ? '01' :
                    Document["administrative:travel_office"].charAt(0) == '2' ? '01' :
                    Document["administrative:travel_office"].charAt(0) == '5' ? '50' :
                    '70'
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:travel_company</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:company_var
                </param>
            </operation>
        </chain>

        <chain id="Athento.OM-EnviarEmailAgencia">
            <operation id="Context.FetchDocument"/>
            <operation id="Context.SetInputAsVar">
                <param type="string" name="name">documents</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">clase</param>
                <param type="object" name="value">expr:@{documents.getClass()}</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">essimple</param>
                <param type="boolean" name="value">expr:clase == 'class org.nuxeo.ecm.core.api.impl.DocumentModelImpl'</param>
            </operation>
            <operation id="Document.Fetch">
                <param type="document" name="value">expr:essimple ? documents : documents[0]</param>
            </operation>
            <operation id="Context.SetInputAsVar">
                <param type="string" name="name">documento</param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:Document["administrative:hotels"] != empty ? 'Athento.OM-EnviarEmailAgencia-Send' :
                    Document["administrative:drivenTravel"] != empty ? 'Athento.OM-EnviarEmailAgencia-Send' :
                    Document["administrative:carRental"] != empty ? 'Athento.OM-EnviarEmailAgencia-Send' :
                    'voidChain'
                </param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.OM-EnviarEmailAgencia-Send">
            <operation id="Context.FetchDocument"/>
            <operation id="Context.SetInputAsVar">
                <param type="string" name="name">documents</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">clase</param>
                <param type="object" name="value">expr:@{documents.getClass()}</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">essimple</param>
                <param type="boolean" name="value">expr:clase == 'class org.nuxeo.ecm.core.api.impl.DocumentModelImpl'</param>
            </operation>
            <operation id="Document.Fetch">
                <param type="document" name="value">expr:essimple ? documents : documents[0]</param>
            </operation>
            <operation id="Context.SetInputAsVar">
                <param type="string" name="name">documento</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">email_var</param>
                <param type="object" name="value">expr:Fn.getVocabularyLabel("config-om","email-OM")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">email_agencia_var</param>
                <param type="object" name="value">expr:Fn.getVocabularyLabel("config-om","email-OM")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">email_con_solicitante_var</param>
                <param type="object" name="value">expr:@{Document["userFile:mail"] == empty ? email_agencia_var :
                    email_agencia_var + "," + Document["userFile:mail"]}
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">email_var</param>
                <param type="object" name="value">expr:@{Document["administrative:travel_mail"] == empty ? email_con_solicitante_var :
                    email_con_solicitante_var + "," + Document["administrative:travel_mail"]}
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">from_var</param>
                <param type="object" name="value">expr:Fn.getVocabularyLabel("config-om","from-OM")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">message_var</param>
                <param type="object" name="value">expr:Fn.getVocabularyLabel("config-om","message-OM")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">subject_var</param>
                <param type="object" name="value">expr:Fn.getVocabularyLabel("config-om","subject-OM")
                </param>
            </operation>
            <operation id="TemplateProcessor.Render">
                <param type="string" name="templateName">OM - Agencia de Viajes</param>
            </operation>
            <operation id="Blob.AttachOnDocument">
                <param type="document" name="document">expr:documento.id</param>
                <param type="boolean" name="save">true</param>
                <param type="string" name="xpath">administrative:travel_agency_template</param>
            </operation>
            <operation id="Document.Fetch">
                <param type="document" name="value">expr:documento.id</param>
            </operation>
            <operation id="Notification.SendMail">
                <param type="string" name="from">expr:from_var</param>
                <param type="string" name="message">expr:message_var</param>
                <param type="string" name="subject">expr:subject_var</param>
                <param type="string" name="to">expr:email_var</param>
                <param type="stringlist" name="files">administrative:travel_agency_template</param>
            </operation>
        </chain>

        <chain id="Template-OM-Agencia-de-Viajes-before-save">
            <operation id="Context.FetchDocument"/>
            <operation id="Context.SetInputAsVar">
                <param type="string" name="name">documents</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">clase</param>
                <param type="object" name="value">expr:@{documents.getClass()}</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">essimple</param>
                <param type="boolean" name="value">expr:clase == 'class org.nuxeo.ecm.core.api.impl.DocumentModelImpl'</param>
            </operation>
            <operation id="Document.Fetch">
                <param type="document" name="value">expr:essimple ? documents : documents[0]</param>
            </operation>
            <operation id="TemplateProcessor.Render">
                <param type="string" name="templateName">OM - Agencia de Viajes</param>
            </operation>
            <operation id="Blob.AttachOnDocument">
                <param type="document" name="document">expr:essimple ? documents : documents[0]</param>
                <param type="boolean" name="save">false</param>
                <param type="string" name="xpath">file:content</param>
            </operation>
        </chain>

    </extension>

</component>