<?xml version="1.0" encoding="UTF-8"?>

<component name="org.athento.nuxeo.athento-nx-administrative-doctypes.chains-expenses"
    version="1.0.0">
    <require>org.nuxeo.runtime.started</require>

    <extension target="org.nuxeo.ecm.core.operation.OperationServiceComponent"
        point="chains">

        <chain id="Athento.expensesCalculations">
            <documentation>
                This chain runs the main operation. Try to keep this chain as simple as possible so we always
                have a simple high level chain.
            </documentation>

            <operation id="Context.FetchDocument" />

            <operation id="Context.RunOperation">
                <param type="string" name="id">Athento.expensesPerDay</param>
                <param type="boolean" name="isolate">false</param>
            </operation>

        </chain>

        <chain id="Athento.expensesPerDay">
            <documentation>
                Main Chain that distributes the logic of per day calculations by category.
                If we need a new category, or need to modify them, this is the Chain.

                For every category, if current category property is not empty, runs a subchain
                passing the "category" as parameter to sum every expense in that category.
                If not, zero totals are initialized for that category.

                Finally, after previous subchains, Total values have been calculated and in
                this last chain all of them sum for the current expenseTotal value, which is
                stored in the proper document property.
            </documentation>
            <operation id="Context.FetchDocument" />
            <operation id="Document.RemoveProperty">
                <param type="string" name="xpath">administrative:expensePerDay</param>
                <param type="boolean" name="save">false</param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">Athento.InitializeZeroTotalsBySubcategory</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:Document["administrative:expenseTravel"] == empty ?
                    "Athento.InitializeZeroTotalsByCategory" :
                    "Athento.expensesPerDayByCategory"</param>
                <param type="properties" name="parameters">expenseCategory = Travel</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:Document["administrative:expenseNonTravel"] == empty ?
                    "Athento.InitializeZeroTotalsByCategory" :
                    "Athento.expensesPerDayByCategory"</param>
                <param type="properties" name="parameters">expenseCategory = NonTravel</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:Document["administrative:expenseKm"] == empty ?
                    "Athento.InitializeZeroTotalsByCategory" :
                    "Athento.expensesPerDayByCategory"</param>
                <param type="properties" name="parameters">expenseCategory = Km</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:Document["administrative:expenseCourse"] == empty ?
                    "Athento.InitializeZeroTotalsByCategory" :
                    "Athento.expensesPerDayByCategory"</param>
                <param type="properties" name="parameters">expenseCategory = Course</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseTotal</param>
                <param type="integer" name="value">expr:expenseTravelTotal+
                    expenseNonTravelTotal+expenseKmTotal+expenseCourseTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseTotal == empty ? empty : expenseTotal
                </param>
            </operation>
        </chain>

        <chain id="Athento.InitializeZeroTotalsByCategory">
            <documentation>
                Initialize 0 values in totals.
            </documentation>
            <param type="string" name="expenseCategory"/>
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCategory</param>
                <param type="string" name="value">expr:@{ChainParameters['expenseCategory']}
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expr:"expense" + expenseCategory + "Total"</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:"administrative:expense" + expenseCategory + "Total"</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:Context["expense" + expenseCategory + "Total"]
                </param>
            </operation>
        </chain>

        <chain id="Athento.InitializeZeroTotalsBySubcategory">
            <documentation>
                TODO: Make this chain GENERIC

                Initializes to Zero the partial sums of every category. Totally specific, needs to be reimplemented to
                make it generic.

                expenseRestaurantTravelTotal
                expenseCustomerTravelTotal
                expenseOthersTravelTotal
                expenseTransportTravelTotal
                expenseJourneyTravelTotal
                expenseLodgingTravelTotal

                expenseRestaurantNonTravelTotal
                expenseCustomerNonTravelTotal
                expenseOthersNonTravelTotal
                expenseTransportNonTravelTotal
                expenseJourneyNonTravelTotal
                expenseLodgingNonTravelTotal

                expenseCompanyKmTotal
                expenseOwnKmTotal

            </documentation>
            <operation id="Context.FetchDocument" />

            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseKmTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseCourseTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>

            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseRestaurantTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseCustomerTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseOthersTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseTransportTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseJourneyTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseLodgingTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseRestaurantNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseCustomerNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseOthersNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseTransportNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseJourneyNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseLodgingNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseCompanyKmTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseOwnKmTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">0
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDayByCategory">
            <documentation>
                Generic operation that sums expenses by day.
            </documentation>
            <param type="string" name="expenseCategory"/>
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCategory</param>
                <param type="string" name="value">expr:@{ChainParameters['expenseCategory']}
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expr:"expense" + expenseCategory + "Total"</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expr:"expense" + expenseCategory</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayIndExpenseCategory</param>
                <param type="integer" name="value">0</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDate</param>
                <param type="object" name="value">expr:Document["administrative:expense" + expenseCategory + "/[" + expensePerDayIndExpenseCategory + "]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDate == empty ? "voidChain" :
                    "Athento.expensesPerDayIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:"administrative:expense" + expenseCategory + "Total"</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:Context["expense" + expenseCategory + "Total"]
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDayIterate">
            <documentation>
                Generic operation that sums expenses by day in an iterative way.
            </documentation>
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="integer" name="value">expr:Document["administrative:expense" + expenseCategory + "/[" + expensePerDayIndExpenseCategory + "]/expense"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">category</param>
                <param type="integer" name="value">expr:Document["administrative:expense" + expenseCategory + "/[" + expensePerDayIndExpenseCategory + "]/category"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expr:@{"expense" + expenseCategory}</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">false
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:category == empty ? "voidChain" :
                    "Athento.expensesPreformatExpense"
                </param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDate == empty ? "voidChain" :
                    "Athento.expensesPerDaySumDayByDay"
                </param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseToSum</param>
                <param type="integer" name="value">expr:Context["expense" + expenseCategory + "Total"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expr:"expense" + expenseCategory + "Total"</param>
                <param type="integer" name="value">expr:expenseToSum + expense
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayIndExpenseCategory</param>
                <param type="integer" name="value">expr:expensePerDayIndExpenseCategory+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDate</param>
                <param type="object" name="value">expr:Document["administrative:expense" + expenseCategory + "/[" + expensePerDayIndExpenseCategory + "]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDate == empty ? "voidchain" :
                    "Athento.expensesPerDayIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesPreformatExpense">
            <documentation>
                Specific precalculations based on the specific category of the expense.
            </documentation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseSubcategoryInd</param>
                <param type="string" name="value">expr:category.substring(0,2)
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseSubcategoryInd == '80' ? "Athento.expensesKm" :
                    expenseSubcategoryInd == '90' ? "Athento.expensesKm" : 'voidChain'</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDaySumDayByDay">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDay</param>
                <param type="object" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDatePerDay == empty ? "Athento.expensesPerDayAddNewDay" :
                    "Athento.expensesPerDaySumDayByDayIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDaySumDayByDayIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateForm</param>
                <param type="integer" name="value">expr:new java.text.SimpleDateFormat("yyyy-MM-dd")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDayFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDatePerDay.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDate.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">expr:expenseDatePerDayFormatted == expenseDateFormatted
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expensePerDayHit ? "Athento.expensesPerDaySum" :
                    "voidChain"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayInd</param>
                <param type="integer" name="value">expr:expensePerDayInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDay</param>
                <param type="object" name="value">expr:Document["administrative:expensePerDay/[" + expensePerDayInd + "]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expensePerDayHit ? 'voidChain' : expenseDatePerDay == empty ? "Athento.expensesPerDayAddNewDay" :
                    "Athento.expensesPerDaySumDayByDayIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">false
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDaySum">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDay</param>
                <param type="integer" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expense"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDay</param>
                <param type="integer" name="value">expr:expensePerDay+expense
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:category == empty ? 'voidChain' : 'Athento.expensesPerDaySumCategorized'</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expensePerDay/["+expensePerDayInd+"]/expense"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expensePerDay
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDayAddNewDay">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateForm</param>
                <param type="integer" name="value">expr:new java.text.SimpleDateFormat("yyyy-MM-dd")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDate.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDay</param>
                <param type="integer" name="value">expr:expense
                </param>
            </operation>
            <operation id="Athento.SetComplexProperty">
                <param type="string" name="xpath">administrative:expensePerDay</param>
                <param type="boolean" name="save">false</param>
                <param type="properties" name="properties">expr:expenseDate=@{expenseDateFormatted}
                    expense=@{expense}
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:category == empty ? 'voidChain' : 'Athento.expensesPerDaySumCategorized'</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDaySumCategorized">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseSubcategoryInd</param>
                <param type="string" name="value">expr:category.substring(0,2)
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseSubcategoryAssociated</param>
                <param type="string" name="value">expr:expenseSubcategoryInd == '00' ? 'Restaurant' :
                    expenseSubcategoryInd == '10' ? 'Customer' :
                    expenseSubcategoryInd == '20' ? 'Others' :
                    expenseSubcategoryInd == '30' ? 'Transport' :
                    expenseSubcategoryInd == '40' ? 'Journey' :
                    expenseSubcategoryInd == '50' ? 'Lodging' :
                    expenseSubcategoryInd == '80' ? 'Company' :
                    expenseSubcategoryInd == '90' ? 'Own' :
                    '0000'
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseSubcategoryAssociated == '0000' ? 'voidChain' :
                    'Athento.expensesPerDaySumCategorizedItem'</param>
                <param type="properties" name="parameters">expr:expenseSubcategoryInd = @{expenseSubcategoryInd}
                    expenseSubcategory = @{expenseSubcategoryAssociated}</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">logTesting</param>
                <param type="string" name="value">logTesting
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expr:@{"expense" + expenseCategory}</param>
                <param type="integer" name="value">expr:Context["expense" + expenseCategory] + expense
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expensePerDay/["+expensePerDayInd+"]/expense" + expenseCategory}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:Context["expense" + expenseCategory]
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDaySumCategorizedItem">
            <param type="string" name="expenseSubcategory"/>
            <param type="string" name="expenseSubcategoryInd"/>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseSubcategory</param>
                <param type="string" name="value">expr:@{ChainParameters['expenseSubcategory']}
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseSubcategoryInd</param>
                <param type="string" name="value">expr:@{ChainParameters['expenseSubcategoryInd']}
                </param>
            </operation>
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">@{"expense" + expenseSubcategory + expenseCategory}</param>
                <param type="integer" name="value">expr:expenseSubcategory == 'expenseSubcategoryInd'  ?
                    Context["expense" + expenseSubcategory + expenseCategory] + expense :
                    Context["expense" + expenseSubcategory + expenseCategory]
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expensePerDay/["+expensePerDayInd+"]/expense" + expenseSubcategory + expenseCategory}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expensePerDay
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expense" + expenseSubcategory + expenseCategory+"Total"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:Document["administrative:expense" + expenseSubcategory + expenseCategory+"Total"] + expense
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesKm">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">carkmcost</param>
                <param type="object" name="value">expr:new java.lang.Double(Fn.getVocabularyLabel("carkmcost", category))
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">goback</param>
                <param type="object" name="value">expr:new java.lang.Double(Document["administrative:expense" + expenseCategory + "/["+expensePerDayIndExpenseCategory+"]/goback"])
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">route</param>
                <param type="integer" name="value">expr:Document["administrative:expense" + expenseCategory + "/["+expensePerDayIndExpenseCategory+"]/route"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">routescom</param>
                <param type="object" name="value">expr:route == empty ?
                    Document["administrative:expense" + expenseCategory + "/["+expensePerDayIndExpenseCategory+"]/km"] :
                    new java.lang.Double(Fn.getVocabularyLabel("routescom", route))
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="object" name="value">expr:routescom*goback*carkmcost
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expr:"expenseOwn" + expenseCategory + "Total"</param>
                <param type="integer" name="value">expr:Context["expenseOwn" + expenseCategory + "Total"] + expense
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expense" + expenseCategory + "/["+expensePerDayIndExpenseCategory+"]/carOwner"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:category == '9001' ? '901' : '801'
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expense" + expenseCategory + "/["+expensePerDayIndExpenseCategory+"]/km"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:routescom
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expense" + expenseCategory + "/["+expensePerDayIndExpenseCategory+"]/expense"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expense
                </param>
            </operation>

        </chain>

        <chain id="Template-Liquidacion-de-gastos-before-save">
            <operation id="Context.FetchDocument"/>
            <operation id="Context.SetInputAsVar">
                <param type="string" name="name">documents</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">clase</param>
                <param type="object" name="value">expr:@{documents.getClass()}</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">essimple</param>
                <param type="boolean" name="value">expr:clase == 'class org.nuxeo.ecm.core.api.impl.DocumentModelImpl'</param>
            </operation>
            <operation id="Document.Fetch">
                <param type="document" name="value">expr:essimple ? documents : documents[0]</param>
            </operation>
            <operation id="TemplateProcessor.Render">
                <param type="string" name="templateName">Plantilla Gastos</param>
            </operation>
            <operation id="Blob.AttachOnDocument">
                <param type="document" name="document">expr:essimple ? documents : documents[0]</param>
                <param type="boolean" name="save">false</param>
                <param type="string" name="xpath">file:content</param>
            </operation>

        </chain>



        <!-- <chain id="Athento.expensesPerDayTravelSum">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayTravelInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDate</param>
                <param type="object" name="value">expr:Document["administrative:expenseTravel/["+expensePerDayTravelInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDate == empty ? "voidChain" :
                    "Athento.expensesPerDayTravelSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDayTravelSumIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="integer" name="value">expr:Document["administrative:expenseTravel/["+expensePerDayTravelInd+"]/expense"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">category</param>
                <param type="integer" name="value">expr:Document["administrative:expenseTravel/["+expensePerDayTravelInd+"]/category"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">false
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDate == empty ? "voidChain" :
                    category == "001" ? "Athento.expensesPerDayTravelSumDayByDay" :
                    category == "003" ? "Athento.expensesPerDayTravelSumDayByDay" :
                    category == "004" ? "Athento.expensesPerDayTravelSumDayByDay" :
                    category == "101" ? "Athento.expensesPerDayTravelSumDayByDay" :
                    category == "102" ? "Athento.expensesPerDayTravelSumDayByDay" : "voidChain"
                    </param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayTravelInd</param>
                <param type="integer" name="value">expr:expensePerDayTravelInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDate</param>
                <param type="object" name="value">expr:Document["administrative:expenseTravel/["+expensePerDayTravelInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDate == empty ? "voidchain" :
                    "Athento.expensesPerDayTravelSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDayTravelSumDayByDay">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDay</param>
                <param type="object" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDatePerDay == empty ? "Athento.expensesPerDayAddNewDay" :
                    "Athento.expensesPerDayTravelSumDayByDayIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDayTravelSumDayByDayIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateForm</param>
                <param type="integer" name="value">expr:new java.text.SimpleDateFormat("yyyy-MM-dd")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDayFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDatePerDay.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDate.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">expr:expenseDatePerDayFormatted == expenseDateFormatted
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expensePerDayHit ? "Athento.expensesPerDaySum" :
                    "voidChain"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayInd</param>
                <param type="integer" name="value">expr:expensePerDayInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDay</param>
                <param type="object" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expensePerDayHit ? 'voidChain' : expenseDatePerDay == empty ? "Athento.expensesPerDayAddNewDay" :
                    "Athento.expensesPerDayTravelSumDayByDayIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">false
                </param>
            </operation>
        </chain>


        <chain id="Athento.expensesPerDayNonTravelSum">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayNonTravelInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDate</param>
                <param type="object" name="value">expr:Document["administrative:expenseNonTravel/["+expensePerDayNonTravelInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDate == empty ? "voidchain" :
                    "Athento.expensesPerDayNonTravelSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDayNonTravelSumIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="integer" name="value">expr:Document["administrative:expenseNonTravel/["+expensePerDayNonTravelInd+"]/expense"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">category</param>
                <param type="integer" name="value">expr:Document["administrative:expenseNonTravel/["+expensePerDayNonTravelInd+"]/category"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">false
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDate == empty ? "voidchain" :
                    category == "001" ? "Athento.expensesPerDayNonTravelSumDayByDay" :
                    category == "003" ? "Athento.expensesPerDayNonTravelSumDayByDay" :
                    category == "004" ? "Athento.expensesPerDayNonTravelSumDayByDay" :
                    category == "101" ? "Athento.expensesPerDayNonTravelSumDayByDay" :
                    category == "102" ? "Athento.expensesPerDayNonTravelSumDayByDay" : "voidchain"
                </param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayNonTravelInd</param>
                <param type="integer" name="value">expr:expensePerDayNonTravelInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDate</param>
                <param type="object" name="value">expr:Document["administrative:expenseNonTravel/["+expensePerDayNonTravelInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDate == empty ? "voidchain" :
                    "Athento.expensesPerDayNonTravelSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDayNonTravelSumDayByDay">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDay</param>
                <param type="object" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDatePerDay == empty ? "Athento.expensesPerDayAddNewDay" :
                    "Athento.expensesPerDayNonTravelSumDayByDayIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesPerDayNonTravelSumDayByDayIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateForm</param>
                <param type="integer" name="value">expr:new java.text.SimpleDateFormat("yyyy-MM-dd")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDayFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDatePerDay.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDate.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">expr:expenseDatePerDayFormatted == expenseDateFormatted
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expensePerDayHit ? "Athento.expensesPerDaySum" :
                    "voidChain"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayInd</param>
                <param type="integer" name="value">expr:expensePerDayInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDay</param>
                <param type="object" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expensePerDayHit ? 'voidChain' : expenseDatePerDay == empty ? "Athento.expensesPerDayAddNewDay" :
                    "Athento.expensesPerDayNonTravelSumDayByDayIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">false
                </param>
            </operation>
        </chain>





        <chain id="Athento.expensesTravelSum">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseTransportTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseLodgingTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseRestaurantTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseJourneyTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseOthersTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCustomerTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseTravelInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="integer" name="value">expr:Document["administrative:expenseTravel/["+expenseTravelInd+"]/expense"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expense == empty ? "voidchain" :
                    "Athento.expensesTravelSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseTravelTotal</param>
                <param type="integer" name="value">expr:expenseTransportTravelTotal+
                    expenseLodgingTravelTotal+expenseRestaurantTravelTotal+expenseJourneyTravelTotal+
                    expenseOthersTravelTotal+expenseCustomerTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseTravelTotal == empty ? empty : expenseTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseTransportTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseTransportTravelTotal == empty ? empty : expenseTransportTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseLodgingTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseLodgingTravelTotal == empty ? empty : expenseLodgingTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseRestaurantTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseRestaurantTravelTotal == empty ? empty : expenseRestaurantTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseJourneyTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseJourneyTravelTotal == empty ? empty : expenseJourneyTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseOthersTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseOthersTravelTotal == empty ? empty : expenseOthersTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseCustomerTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseCustomerTravelTotal == empty ? empty : expenseCustomerTravelTotal
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesTravelSumIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">category</param>
                <param type="string" name="value">expr:Document["administrative:expenseTravel/["+expenseTravelInd+"]/category"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">category</param>
                <param type="string" name="value">expr:category.substring(0,2)
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseRestaurantTravelTotal</param>
                <param type="integer" name="value">expr:category == '00'  ? expenseRestaurantTravelTotal + expense : expenseRestaurantTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCustomerTravelTotal</param>
                <param type="integer" name="value">expr:category == '10'  ? expenseCustomerTravelTotal + expense : expenseCustomerTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseOthersTravelTotal</param>
                <param type="integer" name="value">expr:category == '20' ? expenseOthersTravelTotal + expense : expenseOthersTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseTransportTravelTotal</param>
                <param type="integer" name="value">expr:category == '30' ? expenseTransportTravelTotal + expense : expenseTransportTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseJourneyTravelTotal</param>
                <param type="integer" name="value">expr:category == '40' ? expenseJourneyTravelTotal + expense : expenseJourneyTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseLodgingTravelTotal</param>
                <param type="integer" name="value">expr:category == '50' ? expenseLodgingTravelTotal + expense : expenseLodgingTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDate</param>
                <param type="integer" name="value">expr:Document["administrative:expenseTravel/["+expenseTravelInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseTravel/["+expenseTravelInd+"]/expenseDaily"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:empty
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">Athento.AssignTravelDailyExpense</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDaily</param>
                <param type="integer" name="value">expr:Document["administrative:expenseTravel/["+expenseTravelInd+"]/expenseDaily"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">maximized</param>
                <param type="boolean" name="value">expr:Document["administrative:expenseTravel/["+expenseTravelInd+"]/maximized"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">specialAuthorization</param>
                <param type="boolean" name="value">expr:Document["administrative:expenseTravel/["+expenseTravelInd+"]/specialAuthorization"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseComment</param>
                <param type="object" name="value">expr:expenseDaily == empty ? "" :
                    expenseDaily.compare(expenseDaily,"30") == -1 ? "" :
                    maximized ? "003" :
                    specialAuthorization ? "002" :
                    "101"
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseTravel/["+expenseTravelInd+"]/comments"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseComment
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseTravelInd</param>
                <param type="integer" name="value">expr:expenseTravelInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="integer" name="value">expr:Document["administrative:expenseTravel/["+expenseTravelInd+"]/expense"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expense == empty ? "voidchain" :
                    "Athento.expensesTravelSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.AssignTravelDailyExpense">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDay</param>
                <param type="object" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDatePerDay == empty ? "voidChain" :
                    "Athento.AssignTravelDailyExpenseIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.AssignTravelDailyExpenseIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateForm</param>
                <param type="integer" name="value">expr:new java.text.SimpleDateFormat("yyyy-MM-dd")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDayFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDatePerDay.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDate.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">expr:expenseDatePerDayFormatted == expenseDateFormatted
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expensePerDayHit ? "Athento.AssignTravelExpenseHit" :
                    "voidChain"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayInd</param>
                <param type="integer" name="value">expr:expensePerDayInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDay</param>
                <param type="object" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expensePerDayHit ? 'voidChain' : expenseDatePerDay == empty ? "voidChain" :
                    "Athento.AssignTravelDailyExpenseIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">false
                </param>
            </operation>
        </chain>

        <chain id="Athento.AssignTravelExpenseHit">
            <operation id="Context.FetchDocument" />
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseTravel/["+expenseTravelInd+"]/expenseDaily"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expense"]
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesNonTravelSum">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseNonTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseTransportNonTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseLodgingNonTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseRestaurantNonTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseJourneyNonTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseOthersNonTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCustomerNonTravelTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseNonTravelInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="integer" name="value">expr:Document["administrative:expenseNonTravel/["+expenseNonTravelInd+"]/expense"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expense == empty ? "voidchain" :
                    "Athento.expensesNonTravelSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseNonTravelTotal</param>
                <param type="integer" name="value">expr:expenseTransportNonTravelTotal+
                    expenseLodgingNonTravelTotal+expenseRestaurantNonTravelTotal+expenseJourneyNonTravelTotal+
                    expenseOthersNonTravelTotal+expenseCustomerNonTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseNonTravelTotal == empty ? empty : expenseNonTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseTransportNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseTransportNonTravelTotal == empty ? empty : expenseTransportNonTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseLodgingNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseLodgingNonTravelTotal == empty ? empty : expenseLodgingNonTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseRestaurantNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseRestaurantNonTravelTotal == empty ? empty : expenseRestaurantNonTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseJourneyNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseJourneyNonTravelTotal == empty ? empty : expenseJourneyNonTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseOthersNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseOthersNonTravelTotal == empty ? empty : expenseOthersNonTravelTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseCustomerNonTravelTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseCustomerNonTravelTotal == empty ? empty : expenseCustomerNonTravelTotal
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesNonTravelSumIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">category</param>
                <param type="string" name="value">expr:Document["administrative:expenseNonTravel/["+expenseNonTravelInd+"]/category"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">category</param>
                <param type="string" name="value">expr:category.substring(0,2)
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseRestaurantNonTravelTotal</param>
                <param type="integer" name="value">expr:category == '00' ? expenseRestaurantNonTravelTotal + expense : expenseRestaurantNonTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCustomerNonTravelTotal</param>
                <param type="integer" name="value">expr:category == '10' ? expenseCustomerNonTravelTotal + expense : expenseCustomerNonTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseOthersNonTravelTotal</param>
                <param type="integer" name="value">expr:category == '20' ? expenseOthersNonTravelTotal + expense : expenseOthersNonTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseTransportNonTravelTotal</param>
                <param type="integer" name="value">expr:category == '30' ? expenseTransportNonTravelTotal + expense : expenseTransportNonTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseJourneyNonTravelTotal</param>
                <param type="integer" name="value">expr:category == '40' ? expenseJourneyNonTravelTotal + expense : expenseJourneyNonTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseLodgingNonTravelTotal</param>
                <param type="integer" name="value">expr:category == '50' ? expenseLodgingNonTravelTotal + expense : expenseLodgingNonTravelTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDate</param>
                <param type="integer" name="value">expr:Document["administrative:expenseNonTravel/["+expenseNonTravelInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseNonTravel/["+expenseNonTravelInd+"]/expenseDaily"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:empty
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">Athento.AssignNonTravelDailyExpense</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDaily</param>
                <param type="integer" name="value">expr:Document["administrative:expenseNonTravel/["+expenseNonTravelInd+"]/expenseDaily"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">maximized</param>
                <param type="boolean" name="value">expr:Document["administrative:expenseNonTravel/["+expenseNonTravelInd+"]/maximized"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">specialAuthorization</param>
                <param type="boolean" name="value">expr:Document["administrative:expenseNonTravel/["+expenseNonTravelInd+"]/specialAuthorization"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseComment</param>
                <param type="object" name="value">expr:expenseDaily == empty ? "" :
                    expenseDaily.compare(expenseDaily,"30") == -1 ? "" :
                    maximized ? "003" :
                    specialAuthorization ? "002" :
                    "101"
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseNonTravel/["+expenseNonTravelInd+"]/comments"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseComment
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseNonTravelInd</param>
                <param type="integer" name="value">expr:expenseNonTravelInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="integer" name="value">expr:Document["administrative:expenseNonTravel/["+expenseNonTravelInd+"]/expense"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expense == empty ? "voidchain" :
                    "Athento.expensesNonTravelSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.AssignNonTravelDailyExpense">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDay</param>
                <param type="object" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expenseDatePerDay == empty ? "voidChain" :
                    "Athento.AssignNonTravelDailyExpenseIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.AssignNonTravelDailyExpenseIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateForm</param>
                <param type="integer" name="value">expr:new java.text.SimpleDateFormat("yyyy-MM-dd")
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDayFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDatePerDay.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDateFormatted</param>
                <param type="integer" name="value">expr:expenseDateForm.format(expenseDate.getTime())
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">expr:expenseDatePerDayFormatted == expenseDateFormatted
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expensePerDayHit ? "Athento.AssignNonTravelExpenseHit" :
                    "voidChain"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayInd</param>
                <param type="integer" name="value">expr:expensePerDayInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseDatePerDay</param>
                <param type="object" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expenseDate"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:expensePerDayHit ? 'voidChain' : expenseDatePerDay == empty ? "voidChain" :
                    "Athento.AssignNonTravelDailyExpenseIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expensePerDayHit</param>
                <param type="boolean" name="value">false
                </param>
            </operation>
        </chain>

        <chain id="Athento.AssignNonTravelExpenseHit">
            <operation id="Context.FetchDocument" />
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseNonTravel/["+expenseNonTravelInd+"]/expenseDaily"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:Document["administrative:expensePerDay/["+expensePerDayInd+"]/expense"]
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesKmSum">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseKmInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">route</param>
                <param type="integer" name="value">expr:Document["administrative:expenseKm/["+expenseKmInd+"]/route"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:route == empty ? "voidchain" :
                    "Athento.expensesKmSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseKmTotal</param>
                <param type="integer" name="value">expr:expenseCompanyKmTotal + expenseOwnKmTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseOwnKmTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseOwnKmTotal == empty ? empty : expenseOwnKmTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseCompanyKmTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseCompanyKmTotal == empty ? empty : expenseCompanyKmTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseKmTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseKmTotal == empty ? empty : expenseKmTotal
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesKmSumIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">carCategory</param>
                <param type="string" name="value">expr:Document["administrative:expenseKm/["+expenseKmInd+"]/carCategory"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">carkmcost</param>
                <param type="object" name="value">expr:new java.lang.Double(Fn.getVocabularyLabel("carkmcost", carCategory))
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">goback</param>
                <param type="object" name="value">expr:new java.lang.Double(Document["administrative:expenseKm/["+expenseKmInd+"]/goback"])
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">km</param>
                <param type="object" name="value">expr:Document["administrative:expenseKm/["+expenseKmInd+"]/km"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="object" name="value">expr:km*goback*carkmcost
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseOwnKmTotal</param>
                <param type="integer" name="value">expr:carCategory == 'car.1000' ? expenseOwnKmTotal + expense : expenseOwnKmTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCompanyKmTotal</param>
                <param type="integer" name="value">expr:carCategory == 'car.1000' ? expenseCompanyKmTotal : expenseCompanyKmTotal + expense
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseKm/["+expenseKmInd+"]/carOwner"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:carCategory == 'car.1000' ? '01' : '02'
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseKm/["+expenseKmInd+"]/expense"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expense
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseKmInd</param>
                <param type="integer" name="value">expr:expenseKmInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">route</param>
                <param type="integer" name="value">expr:Document["administrative:expenseKm/["+expenseKmInd+"]/route"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:route == empty ? "voidchain" :
                    "Athento.expensesKmSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesKmOfficesSum">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseKmOfficesInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">route</param>
                <param type="integer" name="value">expr:Document["administrative:expenseKmOffices/["+expenseKmOfficesInd+"]/route"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:route == empty ? "voidchain" :
                    "Athento.expensesKmOfficesSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseKmTotal</param>
                <param type="integer" name="value">expr:expenseCompanyKmTotal + expenseOwnKmTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseOwnKmTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseOwnKmTotal == empty ? empty : expenseOwnKmTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseCompanyKmTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseCompanyKmTotal == empty ? empty : expenseCompanyKmTotal
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseKmTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseKmTotal == empty ? empty : expenseKmTotal
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesKmOfficesSumIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">carCategory</param>
                <param type="string" name="value">expr:Document["administrative:expenseKmOffices/["+expenseKmOfficesInd+"]/carCategory"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">carkmcost</param>
                <param type="object" name="value">expr:new java.lang.Double(Fn.getVocabularyLabel("carkmcost", carCategory))
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">goback</param>
                <param type="object" name="value">expr:new java.lang.Double(Document["administrative:expenseKmOffices/["+expenseKmOfficesInd+"]/goback"])
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">routescom</param>
                <param type="object" name="value">expr:new java.lang.Double(Fn.getVocabularyLabel("routescom", route))
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="object" name="value">expr:routescom*goback*carkmcost
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseOwnKmTotal</param>
                <param type="integer" name="value">expr:carCategory == 'car.1000' ? expenseOwnKmTotal + expense : expenseOwnKmTotal
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCompanyKmTotal</param>
                <param type="integer" name="value">expr:carCategory == 'car.1000' ? expenseCompanyKmTotal : expenseCompanyKmTotal + expense
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseKmOffices/["+expenseKmOfficesInd+"]/carOwner"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:carCategory == 'car.1000' ? '01' : '02'
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseKmOffices/["+expenseKmOfficesInd+"]/km"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:routescom
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseKmOffices/["+expenseKmOfficesInd+"]/expense"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expense
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseKmOfficesInd</param>
                <param type="integer" name="value">expr:expenseKmOfficesInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">route</param>
                <param type="integer" name="value">expr:Document["administrative:expenseKmOffices/["+expenseKmOfficesInd+"]/route"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:route == empty ? "voidchain" :
                    "Athento.expensesKmOfficesSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>

        <chain id="Athento.expensesCourseSum">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCourseInd</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCourseTotal</param>
                <param type="integer" name="value">0
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">name</param>
                <param type="integer" name="value">expr:Document["administrative:expenseCourse/["+expenseCourseInd+"]/name"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:name == empty ? "voidchain" :
                    "Athento.expensesCourseSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">administrative:expenseCourseTotal</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expenseCourseTotal == empty ? empty : expenseCourseTotal
                </param>
            </operation>
        </chain>

        <chain id="Athento.expensesCourseSumIterate">
            <operation id="Context.FetchDocument" />
            <operation id="Context.SetVar">
                <param type="string" name="name">place</param>
                <param type="string" name="value">expr:Document["administrative:expenseCourse/["+expenseCourseInd+"]/place"]
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expense</param>
                <param type="object" name="value">expr:new java.lang.Double(Fn.getVocabularyLabel("courseexp", place))
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCourseTotal</param>
                <param type="integer" name="value">expr:expenseCourseTotal + expense
                </param>
            </operation>
            <operation id="Document.SetProperty">
                <param type="string" name="xpath">expr:@{"administrative:expenseCourse/["+expenseCourseInd+"]/expense"}</param>
                <param type="boolean" name="save">false</param>
                <param type="serializable" name="value">expr:expense
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">expenseCourseInd</param>
                <param type="integer" name="value">expr:expenseCourseInd+1
                </param>
            </operation>
            <operation id="Context.SetVar">
                <param type="string" name="name">name</param>
                <param type="integer" name="value">expr:Document["administrative:expenseCourse/["+expenseCourseInd+"]/name"]
                </param>
            </operation>
            <operation id="Context.RunOperation">
                <param type="string" name="id">expr:name == empty ? "voidchain" :
                    "Athento.expensesCourseSumIterate"</param>
                <param type="boolean" name="isolate">false</param>
            </operation>
        </chain>-->

    </extension>

</component>